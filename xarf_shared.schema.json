{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "ReporterInfo": {
        "type": "object",
        "properties": {
            "ReporterOrg": {
                "type": "string",
                "description": "name of the reporter organisation",
                "minLength": 3
            },
            "ReporterOrgDomain": {
                "type": "string",
                "description": "domain.tld of the reporter organisation",
                "format": "hostname"
            },
            "ReporterOrgEmail": {
                "type": "string",
                "description": "email-address of the reporter organisation",
                "format": "email"
            },
            "ReporterContactEmail": {
                "type": "string",
                "description": "email-address of the reporter contact",
                "format": "email"
            },
            "ReporterContactName": {
                "type": "string",
                "description": "name of the reporter contact",
                "minLength": 3
            },
            "ReporterContactPhone": {
                "type": "string",
                "description": "phone number of the reporter contact",
                "minLength": 3
            }
        },
        "required": [
            "ReporterOrg",
            "ReporterOrgDomain",
            "ReporterOrgEmail"
        ]
    },
    "OnBehalfOf": {
        "type": "object",
        "properties": {
            "ComplainantOrg": {
                "type": "string",
                "description": "name of the complainant organisation",
                "minLength": 3
            },
            "ComplainantOrgDomain": {
                "type": "string",
                "description": "domain.tld of the complainant organisation",
                "format": "hostname"
            },
            "ComplainantOrgEmail": {
                "type": "string",
                "description": "email-address of the complainant organisation",
                "format": "email"
            },
            "ComplainantContactEmail": {
                "type": "string",
                "description": "email-address of the complainant contact",
                "format": "email"
            },
            "ComplainantContactName": {
                "type": "string",
                "description": "name of the complainant contact",
                "minLength": 3
            },
            "ComplainantContactPhone": {
                "type": "string",
                "description": "phone number of the complainant contact",
                "minLength": 3
            }
        },
        "required": [
            "ComplainantOrg",
            "ComplainantOrgDomain",
            "ComplainantOrgEmail"
        ]
    },
    "XarfBase": {
        "description": "Base properties for all xarf reports",
        "type": "object",
        "properties": {
            "ReporterInfo": {
                "$ref": "#/ReporterInfo"
            },
            "OnBehalfOf": {
                "$ref": "#/OnBehalfOf"
            },
            "Disclosure": {
                "type": "boolean",
                "description": "if this event is disclosed or not",
                "default": true
            }
        },
        "required": [
            "ReporterInfo",
            "Disclosure"
        ]
    },
    "ReportBase": {
        "description": "Base properties for the report part of all xarf report types",
        "type": "object",
        "properties": {
            "ReportClass": {
                "type": "string",
                "description": "class of the reported abuse event",
                "enum": [
                    "Content",
                    "Activity"
                ]
            },
            "ReportType": {
                "type": "string",
                "description": "type of the reported abuse event",
                "minLength": 1
            },
            "ReportSubType": {
                "type": "string",
                "description": "subtype of the reported abuse event"
            },
            "ReporterCaseID": {
                "type": "string",
                "description": "case id of this report given by the reporter"
            },
            "ReporterSeverity": {
                "type": "string",
                "description": "class of the reported abuse event",
                "enum": [
                    "low",
                    "medium",
                    "high"
                ]
            },
            "ReporterNotes": {
                "type": "string",
                "description": "free text - notes by the reporter"
            }
        },
        "required": [
            "ReportClass",
            "ReportType"
        ]
    },
    "IpBasedReport": {
        "description": "Base properties for the report part of all xarf report types",
        "allOf": [
            {
                "$ref": "#/ReportBase"
            },
            {
                "$ref": "#/Date"
            },
            {
                "type": "object",
                "properties": {
                    "SourceIp": {
                        "description": "ip from that the abuse event originated",
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipv4"
                            },
                            {
                                "type": "string",
                                "format": "ipv6"
                            }
                        ]
                    },
                    "SourcePort": {
                        "type": "integer",
                        "description": "source port from that the abuse event originated",
                        "minimum": 0,
                        "maximum": 65535
                    },
                    "ASN": {
                        "type": "integer",
                        "description": "autonomous system number the reportet ip belongs to",
                        "minimum": 1,
                        "maximum": 4199999999
                    }
                },
                "required": [
                    "SourceIp"
                ]
            }
        ]
    },
    "Sample": {
        "description": "Evidence sample",
        "properties": {
            "ContentType": {
                "type": "string",
                "description": "content type of the sample (e.g. application/rfc822 or image/jpg)"
            },
            "Base64Encoded": {
                "type": "boolean",
                "description": "if payload is base64 encoded. Useful to avoid losing encoding information (e.g. in mails)",
                "default": false
            },
            "Description": {
                "type": "string",
                "description": "description of the sample in plain text"
            },
            "Payload": {
                "type": "string",
                "description": "actual sample"
            }
        },
        "required": [
            "ContentType",
            "Payload"
        ]
    },
    "CommonProps": {
        "Ongoing": {
            "type": "boolean",
            "description": "is the reported abuse ongoing?"
        },
        "ThreatActor": {
            "type": "string",
            "description": "!TODO!"
        },
        "Samples": {
            "type": "array",
            "description": "Samples of the malware",
            "items": {
                "$ref": "#/Sample"
            },
            "minItems": 1
        }
    },
    "Date": {
        "description": "stores either a single date or two dates, one for the first occurrence of the event, one for the most recent",
        "type": "object",
        "properties": {
            "Date": {
                "format": "date-time",
                "type": "string",
                "description": "most recent date-time the event was noticed"
            },
            "FirstSeen": {
                "format": "date-time",
                "type": "string",
                "description": "date-time the event was first noticed. Can be omitted if it is the same as Date",
                "optional": true
            }
        }
    },
    "File": {
        "description": "Additional properties for xarf report types about a specific file",
        "type": "object",
        "properties": {
            "File": {
                "type": "object",
                "properties": {
                    "FileName": {
                        "type": "string",
                        "description": "name of the file"
                    },
                    "FileSize": {
                        "type": "integer",
                        "description": "file size in byte",
                        "minimum": 0
                    },
                    "FileHash": {
                        "type": "string",
                        "description": "hash value of the file"
                    }
                }
            },
            "required": [
                "FileName"
            ]
        }
    },
    "WithDestination": {
        "DestinationIp": {
            "description": "targeted ip",
            "anyOf": [
                {
                    "type": "string",
                    "format": "ipv4"
                },
                {
                    "type": "string",
                    "format": "ipv6"
                }
            ]
        },
        "oneOf": [
            {
                "DestinationPort": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "description": "targeted port",
                        "minimum": 0,
                        "maximum": 65535
                    }
                }
            },
            {
                "DestinationPort": {
                    "type": "integer",
                    "description": "targeted port",
                    "minimum": 0,
                    "maximum": 65535
                }
            }
        ]
    },
    "WithTrafficStats": {
        "ByteCount": {
            "type": "integer",
            "description": "Bytes per second"
        },
        "PacketCount": {
            "type": "integer",
            "description": "Packets per second"
        }
    }
}
